# docker-compose.yml


services:
  database:
    build: ./database
    volumes:
      - ./data:/data
    environment:
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - USER_USERNAME=${USER_USERNAME}
      - USER_PASSWORD=${USER_PASSWORD}
    healthcheck:
      test: ["CMD", "test", "-f", "/data/dnd_game.db"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: .
      dockerfile: api/Dockerfile
    volumes:
      - ./data:/data
      - ./common:/app/common
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5

  webapp:
    build: 
      context: .
      dockerfile: webapp/Dockerfile
    volumes:
      - ./common:/app/common
    ports:
      - "8502:8502"
    environment:
      - API_URL=${API_URL}
    depends_on:
      api:
        condition: service_healthy

  sqlite-web:
    image: coleifer/sqlite-web
    volumes:
      - ./data:/data
    ports:
      - "8080:8080"
    environment:
      - SQLITE_DATABASE=database.db
    command: sqlite_web -H 0.0.0.0 -p 8080 /data/dnd_game.db
    depends_on:
      database:
        condition: service_healthy
